{
  "$id": "/api/pipes/xxxxxx-tickets-collect/entity-types/sink",
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": true,
  "properties": {
    "$last-modified": {
      "subtype": "nanoseconds",
      "type": "string"
    },
    "allow_attachments": {
      "type": "boolean",
      "description": "Permission for agents to add add attachments to a comment. Defaults to true"
    },
    "allow_channelback": {
      "type": "boolean",
      "description": "Is false if channelback is disabled, true otherwise. Only applicable for channels framework ticket"
    },
    "assignee_id": {
      "anyOf": [
        {
          "type": "integer",
          "description": "The agent currently assigned to the ticket"
        },
        {
          "type": "null"
        }
      ]
    },
    "brand_id": {
      "type": "integer",
      "description": "Enterprise only. The id of the brand this ticket is associated with"
    },
    "collaborator_ids": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "The ids of users currently CC'ed on the ticket"
    },
    "created_at": {
      "type": "string",
      "description": "When this record was created"
    },
    "custom_fields": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "Custom fields for the ticket"
    },
    "custom_status_id": {
      "type": "integer",
      "description": "The custom ticket status id of the ticket."
    },
    "description": {
      "type": "string",
      "description": "Read-only first comment on the ticket. When creating a ticket, use comment to set the description."
    },
    "due_at": {
      "type": "string",
      "description": "If this is a ticket of type 'task' it has a due date. Due date format uses ISO 8601 format."
    },
    "email_cc_ids": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "The ids of agents or end users currently CC'ed on the ticket."
    },
    "external_id": {
      "type": "string",
      "description": "An id you can use to link Zendesk Support tickets to local records"
    },
    "follower_ids": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "The ids of agents currently following the ticket."
    },
    "followup_ids": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "The ids of the followups created from this ticket. Ids are only visible once the ticket is closed"
    },
    "forum_topic_id": {
      "type": "integer",
      "description": "The topic in the Zendesk Web portal this ticket originated from, if any. The Web portal is deprecated"
    },
    "from_messaging_channel": {
      "type": "boolean",
      "description": "If true, the ticket's via type is a messaging channel."
    },
    "group_id": {
      "type": "integer",
      "description": "The group this ticket is assigned to"
    },
    "has_incidents": {
      "type": "boolean",
      "description": "Is true if a ticket is a problem type and has one or more incidents linked to it. Otherwise, the value is false."
    },
    "id": {
      "type": "integer",
      "description": "Automatically assigned when the ticket is created"
    },
    "is_public": {
      "type": "boolean",
      "description": "Is true if any comments are public, false otherwise"
    },
    "organization_id": {
      "anyOf": [
        {
          "type": "integer",
          "description": "The organization of the requester. You can only specify the ID of an organization associated with the requester"
        },
        {
          "type": "null"
        }
      ]
    },
    "priority": {
      "type": "string",
      "description": "The urgency with which the ticket should be addressed. Allowed values are 'urgent', 'high', 'normal', or 'low'."
    },
    "problem_id": {
      "type": "integer",
      "description": "For tickets of type 'incident', the ID of the problem the incident is linked to"
    },
    "raw_subject": {
      "type": "string",
      "description": "The dynamic content placeholder, if present, or the 'subject' value, if not."
    },
    "recipient": {
      "type": "string",
      "description": "The original recipient e-mail address of the ticket. Notification emails for the ticket are sent from this address"
    },
    "requester_id": {
      "type": "integer",
      "description": "The user who requested this ticket"
    },
    "satisfaction_rating": {
      "properties": {
        "assignee_id": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "group_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "reason": {
          "type": "string"
        },
        "reason_code": {
          "type": "integer"
        },
        "reason_id": {
          "type": "integer"
        },
        "requester_id": {
          "type": "integer"
        },
        "score": {
          "type": "string"
        },
        "ticket_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object",
      "description": "The satisfaction rating of the ticket, if it exists, or the state of satisfaction, 'offered' or 'unoffered'. The value is null for plan types that don't support CSAT"
    },
    "sharing_agreement_ids": {
      "items": {
        "anyOf": []
      },
      "type": "array",
      "description": "The ids of the sharing agreements used for this ticket"
    },
    "status": {
      "type": "string",
      "description": "The state of the ticket. If your account has activated custom ticket statuses, this is the ticket's status category. Allowed values are 'new', 'open', 'pending', 'hold', 'solved', or 'closed'."
    },
    "subject": {
      "type": "string",
      "description": "The value of the subject field for this ticket"
    },
    "submitter_id": {
      "type": "integer",
      "description": "The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket"
    },
    "tags": {
      "items": {
        "type": "string"
      },
      "type": "array",
      "description": "The array of tags applied to this ticket"
    },
    "ticket_form_id": {
      "type": "integer",
      "description": "Enterprise only. The id of the ticket form to render for the ticket"
    },
    "type": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "description": "The type of this ticket. Allowed values are 'problem', 'incident', 'question', or 'task'."
        }
      ]
    },
    "updated_at": {
      "type": "string",
      "description": "When this record last got updated"
    },
    "url": {
      "type": "string",
      "description": "The API url of this ticket"
    },
    "via": {
      "additionalProperties": true,
      "properties": {
        "channel": {
          "type": "string"
        },
        "source": {
          "additionalProperties": true,
          "properties": {
            "from": {
              "additionalProperties": true,
              "properties": {},
              "type": "object"
            },
            "rel": {
              "type": "null"
            },
            "to": {
              "additionalProperties": true,
              "properties": {},
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "title": "Pipe sink entity type: xxxxxx-tickets-collect",
  "type": "object"
}